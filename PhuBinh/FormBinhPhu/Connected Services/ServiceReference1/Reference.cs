//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FormBinhPhu.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDetail", Namespace="http://schemas.datacontract.org/2004/07/xphu")]
    [System.SerializableAttribute()]
    public partial class UserDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool actiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idaccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool roleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool acti {
            get {
                return this.actiField;
            }
            set {
                if ((this.actiField.Equals(value) != true)) {
                    this.actiField = value;
                    this.RaisePropertyChanged("acti");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idacc {
            get {
                return this.idaccField;
            }
            set {
                if ((object.ReferenceEquals(this.idaccField, value) != true)) {
                    this.idaccField = value;
                    this.RaisePropertyChanged("idacc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pass {
            get {
                return this.passField;
            }
            set {
                if ((object.ReferenceEquals(this.passField, value) != true)) {
                    this.passField = value;
                    this.RaisePropertyChanged("pass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool role {
            get {
                return this.roleField;
            }
            set {
                if ((this.roleField.Equals(value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Option", Namespace="http://schemas.datacontract.org/2004/07/xphu")]
    [System.SerializableAttribute()]
    public partial class Option : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string contentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime deadlinetimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idoptField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string code {
            get {
                return this.codeField;
            }
            set {
                if ((object.ReferenceEquals(this.codeField, value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string contents {
            get {
                return this.contentsField;
            }
            set {
                if ((object.ReferenceEquals(this.contentsField, value) != true)) {
                    this.contentsField = value;
                    this.RaisePropertyChanged("contents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime deadlinetime {
            get {
                return this.deadlinetimeField;
            }
            set {
                if ((this.deadlinetimeField.Equals(value) != true)) {
                    this.deadlinetimeField = value;
                    this.RaisePropertyChanged("deadlinetime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idopt {
            get {
                return this.idoptField;
            }
            set {
                if ((object.ReferenceEquals(this.idoptField, value) != true)) {
                    this.idoptField = value;
                    this.RaisePropertyChanged("idopt");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vote", Namespace="http://schemas.datacontract.org/2004/07/xphu")]
    [System.SerializableAttribute()]
    public partial class Vote : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idaccField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idoptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idvoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool setflagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime timeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string code {
            get {
                return this.codeField;
            }
            set {
                if ((object.ReferenceEquals(this.codeField, value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idacc {
            get {
                return this.idaccField;
            }
            set {
                if ((object.ReferenceEquals(this.idaccField, value) != true)) {
                    this.idaccField = value;
                    this.RaisePropertyChanged("idacc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string idopt {
            get {
                return this.idoptField;
            }
            set {
                if ((object.ReferenceEquals(this.idoptField, value) != true)) {
                    this.idoptField = value;
                    this.RaisePropertyChanged("idopt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idvote {
            get {
                return this.idvoteField;
            }
            set {
                if ((this.idvoteField.Equals(value) != true)) {
                    this.idvoteField = value;
                    this.RaisePropertyChanged("idvote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool setflag {
            get {
                return this.setflagField;
            }
            set {
                if ((this.setflagField.Equals(value) != true)) {
                    this.setflagField = value;
                    this.RaisePropertyChanged("setflag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime time {
            get {
                return this.timeField;
            }
            set {
                if ((this.timeField.Equals(value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsAcount", ReplyAction="http://tempuri.org/IService1/DsAcountResponse")]
        System.Data.DataSet DsAcount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsAcount", ReplyAction="http://tempuri.org/IService1/DsAcountResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> DsAcountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DangNhap", ReplyAction="http://tempuri.org/IService1/DangNhapResponse")]
        bool DangNhap(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DangNhap", ReplyAction="http://tempuri.org/IService1/DangNhapResponse")]
        System.Threading.Tasks.Task<bool> DangNhapAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Account", ReplyAction="http://tempuri.org/IService1/AccountResponse")]
        bool Account(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Account", ReplyAction="http://tempuri.org/IService1/AccountResponse")]
        System.Threading.Tasks.Task<bool> AccountAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Them", ReplyAction="http://tempuri.org/IService1/ThemResponse")]
        bool Them(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Them", ReplyAction="http://tempuri.org/IService1/ThemResponse")]
        System.Threading.Tasks.Task<bool> ThemAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sua", ReplyAction="http://tempuri.org/IService1/SuaResponse")]
        bool Sua(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Sua", ReplyAction="http://tempuri.org/IService1/SuaResponse")]
        System.Threading.Tasks.Task<bool> SuaAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Xoa", ReplyAction="http://tempuri.org/IService1/XoaResponse")]
        bool Xoa(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Xoa", ReplyAction="http://tempuri.org/IService1/XoaResponse")]
        System.Threading.Tasks.Task<bool> XoaAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ThemContents", ReplyAction="http://tempuri.org/IService1/ThemContentsResponse")]
        bool ThemContents(FormBinhPhu.ServiceReference1.Option option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ThemContents", ReplyAction="http://tempuri.org/IService1/ThemContentsResponse")]
        System.Threading.Tasks.Task<bool> ThemContentsAsync(FormBinhPhu.ServiceReference1.Option option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/XoaOption", ReplyAction="http://tempuri.org/IService1/XoaOptionResponse")]
        bool XoaOption(FormBinhPhu.ServiceReference1.Option xoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/XoaOption", ReplyAction="http://tempuri.org/IService1/XoaOptionResponse")]
        System.Threading.Tasks.Task<bool> XoaOptionAsync(FormBinhPhu.ServiceReference1.Option xoa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadContent", ReplyAction="http://tempuri.org/IService1/LoadContentResponse")]
        bool LoadContent(FormBinhPhu.ServiceReference1.Vote vote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoadContent", ReplyAction="http://tempuri.org/IService1/LoadContentResponse")]
        System.Threading.Tasks.Task<bool> LoadContentAsync(FormBinhPhu.ServiceReference1.Vote vote);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsOption", ReplyAction="http://tempuri.org/IService1/DsOptionResponse")]
        System.Data.DataSet DsOption();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsOption", ReplyAction="http://tempuri.org/IService1/DsOptionResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> DsOptionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsCode1", ReplyAction="http://tempuri.org/IService1/DsCode1Response")]
        System.Data.DataSet DsCode1();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsCode1", ReplyAction="http://tempuri.org/IService1/DsCode1Response")]
        System.Threading.Tasks.Task<System.Data.DataSet> DsCode1Async();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsCode", ReplyAction="http://tempuri.org/IService1/DsCodeResponse")]
        System.Data.DataSet DsCode(string idac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsCode", ReplyAction="http://tempuri.org/IService1/DsCodeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> DsCodeAsync(string idac);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SuaVote", ReplyAction="http://tempuri.org/IService1/SuaVoteResponse")]
        bool SuaVote(FormBinhPhu.ServiceReference1.Vote sua);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SuaVote", ReplyAction="http://tempuri.org/IService1/SuaVoteResponse")]
        System.Threading.Tasks.Task<bool> SuaVoteAsync(FormBinhPhu.ServiceReference1.Vote sua);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ThemVote", ReplyAction="http://tempuri.org/IService1/ThemVoteResponse")]
        bool ThemVote(FormBinhPhu.ServiceReference1.Vote them);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ThemVote", ReplyAction="http://tempuri.org/IService1/ThemVoteResponse")]
        System.Threading.Tasks.Task<bool> ThemVoteAsync(FormBinhPhu.ServiceReference1.Vote them);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KiemTraIdAcc", ReplyAction="http://tempuri.org/IService1/KiemTraIdAccResponse")]
        bool KiemTraIdAcc(FormBinhPhu.ServiceReference1.Vote Kt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KiemTraIdAcc", ReplyAction="http://tempuri.org/IService1/KiemTraIdAccResponse")]
        System.Threading.Tasks.Task<bool> KiemTraIdAccAsync(FormBinhPhu.ServiceReference1.Vote Kt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsAns", ReplyAction="http://tempuri.org/IService1/DsAnsResponse")]
        System.Data.DataSet DsAns();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsAns", ReplyAction="http://tempuri.org/IService1/DsAnsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> DsAnsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SuaAns", ReplyAction="http://tempuri.org/IService1/SuaAnsResponse")]
        bool SuaAns(FormBinhPhu.ServiceReference1.Option sua);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SuaAns", ReplyAction="http://tempuri.org/IService1/SuaAnsResponse")]
        System.Threading.Tasks.Task<bool> SuaAnsAsync(FormBinhPhu.ServiceReference1.Option sua);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsQuestion", ReplyAction="http://tempuri.org/IService1/DsQuestionResponse")]
        System.Data.DataSet DsQuestion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DsQuestion", ReplyAction="http://tempuri.org/IService1/DsQuestionResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> DsQuestionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KiemTraContents", ReplyAction="http://tempuri.org/IService1/KiemTraContentsResponse")]
        bool KiemTraContents(FormBinhPhu.ServiceReference1.Option KtContents);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KiemTraContents", ReplyAction="http://tempuri.org/IService1/KiemTraContentsResponse")]
        System.Threading.Tasks.Task<bool> KiemTraContentsAsync(FormBinhPhu.ServiceReference1.Option KtContents);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DemAns", ReplyAction="http://tempuri.org/IService1/DemAnsResponse")]
        int DemAns(FormBinhPhu.ServiceReference1.Vote Dem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DemAns", ReplyAction="http://tempuri.org/IService1/DemAnsResponse")]
        System.Threading.Tasks.Task<int> DemAnsAsync(FormBinhPhu.ServiceReference1.Vote Dem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DistinctOpt", ReplyAction="http://tempuri.org/IService1/DistinctOptResponse")]
        System.Data.DataSet DistinctOpt();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DistinctOpt", ReplyAction="http://tempuri.org/IService1/DistinctOptResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> DistinctOptAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DemK", ReplyAction="http://tempuri.org/IService1/DemKResponse")]
        int DemK(FormBinhPhu.ServiceReference1.Vote Dem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DemK", ReplyAction="http://tempuri.org/IService1/DemKResponse")]
        System.Threading.Tasks.Task<int> DemKAsync(FormBinhPhu.ServiceReference1.Vote Dem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DemCb", ReplyAction="http://tempuri.org/IService1/DemCbResponse")]
        int DemCb(FormBinhPhu.ServiceReference1.Vote Dem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DemCb", ReplyAction="http://tempuri.org/IService1/DemCbResponse")]
        System.Threading.Tasks.Task<int> DemCbAsync(FormBinhPhu.ServiceReference1.Vote Dem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LuotVote", ReplyAction="http://tempuri.org/IService1/LuotVoteResponse")]
        System.Data.DataSet LuotVote();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LuotVote", ReplyAction="http://tempuri.org/IService1/LuotVoteResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> LuotVoteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KtSetFlag", ReplyAction="http://tempuri.org/IService1/KtSetFlagResponse")]
        bool KtSetFlag(FormBinhPhu.ServiceReference1.Vote Kt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KtSetFlag", ReplyAction="http://tempuri.org/IService1/KtSetFlagResponse")]
        System.Threading.Tasks.Task<bool> KtSetFlagAsync(FormBinhPhu.ServiceReference1.Vote Kt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KtActivate", ReplyAction="http://tempuri.org/IService1/KtActivateResponse")]
        bool KtActivate(FormBinhPhu.ServiceReference1.UserDetail KtAc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KtActivate", ReplyAction="http://tempuri.org/IService1/KtActivateResponse")]
        System.Threading.Tasks.Task<bool> KtActivateAsync(FormBinhPhu.ServiceReference1.UserDetail KtAc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SuaActi", ReplyAction="http://tempuri.org/IService1/SuaActiResponse")]
        bool SuaActi([System.ServiceModel.MessageParameterAttribute(Name="suaacti")] FormBinhPhu.ServiceReference1.UserDetail suaacti1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SuaActi", ReplyAction="http://tempuri.org/IService1/SuaActiResponse")]
        System.Threading.Tasks.Task<bool> SuaActiAsync(FormBinhPhu.ServiceReference1.UserDetail suaacti);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RsActi", ReplyAction="http://tempuri.org/IService1/RsActiResponse")]
        bool RsActi(FormBinhPhu.ServiceReference1.UserDetail rs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RsActi", ReplyAction="http://tempuri.org/IService1/RsActiResponse")]
        System.Threading.Tasks.Task<bool> RsActiAsync(FormBinhPhu.ServiceReference1.UserDetail rs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KtDlVote", ReplyAction="http://tempuri.org/IService1/KtDlVoteResponse")]
        bool KtDlVote(FormBinhPhu.ServiceReference1.Vote Kt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/KtDlVote", ReplyAction="http://tempuri.org/IService1/KtDlVoteResponse")]
        System.Threading.Tasks.Task<bool> KtDlVoteAsync(FormBinhPhu.ServiceReference1.Vote Kt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : FormBinhPhu.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<FormBinhPhu.ServiceReference1.IService1>, FormBinhPhu.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet DsAcount() {
            return base.Channel.DsAcount();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DsAcountAsync() {
            return base.Channel.DsAcountAsync();
        }
        
        public bool DangNhap(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.DangNhap(userinfo);
        }
        
        public System.Threading.Tasks.Task<bool> DangNhapAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.DangNhapAsync(userinfo);
        }
        
        public bool Account(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.Account(userinfo);
        }
        
        public System.Threading.Tasks.Task<bool> AccountAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.AccountAsync(userinfo);
        }
        
        public bool Them(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.Them(userinfo);
        }
        
        public System.Threading.Tasks.Task<bool> ThemAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.ThemAsync(userinfo);
        }
        
        public bool Sua(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.Sua(userinfo);
        }
        
        public System.Threading.Tasks.Task<bool> SuaAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.SuaAsync(userinfo);
        }
        
        public bool Xoa(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.Xoa(userinfo);
        }
        
        public System.Threading.Tasks.Task<bool> XoaAsync(FormBinhPhu.ServiceReference1.UserDetail userinfo) {
            return base.Channel.XoaAsync(userinfo);
        }
        
        public bool ThemContents(FormBinhPhu.ServiceReference1.Option option) {
            return base.Channel.ThemContents(option);
        }
        
        public System.Threading.Tasks.Task<bool> ThemContentsAsync(FormBinhPhu.ServiceReference1.Option option) {
            return base.Channel.ThemContentsAsync(option);
        }
        
        public bool XoaOption(FormBinhPhu.ServiceReference1.Option xoa) {
            return base.Channel.XoaOption(xoa);
        }
        
        public System.Threading.Tasks.Task<bool> XoaOptionAsync(FormBinhPhu.ServiceReference1.Option xoa) {
            return base.Channel.XoaOptionAsync(xoa);
        }
        
        public bool LoadContent(FormBinhPhu.ServiceReference1.Vote vote) {
            return base.Channel.LoadContent(vote);
        }
        
        public System.Threading.Tasks.Task<bool> LoadContentAsync(FormBinhPhu.ServiceReference1.Vote vote) {
            return base.Channel.LoadContentAsync(vote);
        }
        
        public System.Data.DataSet DsOption() {
            return base.Channel.DsOption();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DsOptionAsync() {
            return base.Channel.DsOptionAsync();
        }
        
        public System.Data.DataSet DsCode1() {
            return base.Channel.DsCode1();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DsCode1Async() {
            return base.Channel.DsCode1Async();
        }
        
        public System.Data.DataSet DsCode(string idac) {
            return base.Channel.DsCode(idac);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DsCodeAsync(string idac) {
            return base.Channel.DsCodeAsync(idac);
        }
        
        public bool SuaVote(FormBinhPhu.ServiceReference1.Vote sua) {
            return base.Channel.SuaVote(sua);
        }
        
        public System.Threading.Tasks.Task<bool> SuaVoteAsync(FormBinhPhu.ServiceReference1.Vote sua) {
            return base.Channel.SuaVoteAsync(sua);
        }
        
        public bool ThemVote(FormBinhPhu.ServiceReference1.Vote them) {
            return base.Channel.ThemVote(them);
        }
        
        public System.Threading.Tasks.Task<bool> ThemVoteAsync(FormBinhPhu.ServiceReference1.Vote them) {
            return base.Channel.ThemVoteAsync(them);
        }
        
        public bool KiemTraIdAcc(FormBinhPhu.ServiceReference1.Vote Kt) {
            return base.Channel.KiemTraIdAcc(Kt);
        }
        
        public System.Threading.Tasks.Task<bool> KiemTraIdAccAsync(FormBinhPhu.ServiceReference1.Vote Kt) {
            return base.Channel.KiemTraIdAccAsync(Kt);
        }
        
        public System.Data.DataSet DsAns() {
            return base.Channel.DsAns();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DsAnsAsync() {
            return base.Channel.DsAnsAsync();
        }
        
        public bool SuaAns(FormBinhPhu.ServiceReference1.Option sua) {
            return base.Channel.SuaAns(sua);
        }
        
        public System.Threading.Tasks.Task<bool> SuaAnsAsync(FormBinhPhu.ServiceReference1.Option sua) {
            return base.Channel.SuaAnsAsync(sua);
        }
        
        public System.Data.DataSet DsQuestion() {
            return base.Channel.DsQuestion();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DsQuestionAsync() {
            return base.Channel.DsQuestionAsync();
        }
        
        public bool KiemTraContents(FormBinhPhu.ServiceReference1.Option KtContents) {
            return base.Channel.KiemTraContents(KtContents);
        }
        
        public System.Threading.Tasks.Task<bool> KiemTraContentsAsync(FormBinhPhu.ServiceReference1.Option KtContents) {
            return base.Channel.KiemTraContentsAsync(KtContents);
        }
        
        public int DemAns(FormBinhPhu.ServiceReference1.Vote Dem) {
            return base.Channel.DemAns(Dem);
        }
        
        public System.Threading.Tasks.Task<int> DemAnsAsync(FormBinhPhu.ServiceReference1.Vote Dem) {
            return base.Channel.DemAnsAsync(Dem);
        }
        
        public System.Data.DataSet DistinctOpt() {
            return base.Channel.DistinctOpt();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> DistinctOptAsync() {
            return base.Channel.DistinctOptAsync();
        }
        
        public int DemK(FormBinhPhu.ServiceReference1.Vote Dem) {
            return base.Channel.DemK(Dem);
        }
        
        public System.Threading.Tasks.Task<int> DemKAsync(FormBinhPhu.ServiceReference1.Vote Dem) {
            return base.Channel.DemKAsync(Dem);
        }
        
        public int DemCb(FormBinhPhu.ServiceReference1.Vote Dem) {
            return base.Channel.DemCb(Dem);
        }
        
        public System.Threading.Tasks.Task<int> DemCbAsync(FormBinhPhu.ServiceReference1.Vote Dem) {
            return base.Channel.DemCbAsync(Dem);
        }
        
        public System.Data.DataSet LuotVote() {
            return base.Channel.LuotVote();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> LuotVoteAsync() {
            return base.Channel.LuotVoteAsync();
        }
        
        public bool KtSetFlag(FormBinhPhu.ServiceReference1.Vote Kt) {
            return base.Channel.KtSetFlag(Kt);
        }
        
        public System.Threading.Tasks.Task<bool> KtSetFlagAsync(FormBinhPhu.ServiceReference1.Vote Kt) {
            return base.Channel.KtSetFlagAsync(Kt);
        }
        
        public bool KtActivate(FormBinhPhu.ServiceReference1.UserDetail KtAc) {
            return base.Channel.KtActivate(KtAc);
        }
        
        public System.Threading.Tasks.Task<bool> KtActivateAsync(FormBinhPhu.ServiceReference1.UserDetail KtAc) {
            return base.Channel.KtActivateAsync(KtAc);
        }
        
        public bool SuaActi(FormBinhPhu.ServiceReference1.UserDetail suaacti1) {
            return base.Channel.SuaActi(suaacti1);
        }
        
        public System.Threading.Tasks.Task<bool> SuaActiAsync(FormBinhPhu.ServiceReference1.UserDetail suaacti) {
            return base.Channel.SuaActiAsync(suaacti);
        }
        
        public bool RsActi(FormBinhPhu.ServiceReference1.UserDetail rs) {
            return base.Channel.RsActi(rs);
        }
        
        public System.Threading.Tasks.Task<bool> RsActiAsync(FormBinhPhu.ServiceReference1.UserDetail rs) {
            return base.Channel.RsActiAsync(rs);
        }
        
        public bool KtDlVote(FormBinhPhu.ServiceReference1.Vote Kt) {
            return base.Channel.KtDlVote(Kt);
        }
        
        public System.Threading.Tasks.Task<bool> KtDlVoteAsync(FormBinhPhu.ServiceReference1.Vote Kt) {
            return base.Channel.KtDlVoteAsync(Kt);
        }
    }
}
